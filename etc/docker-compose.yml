version: '3'
services:
  django: &django
    image: konstin2/meine-stadt-transparent
    container_name: django
    volumes:
      - ./.env:/app/.env
      - ./log:/app/log
    ports:
      - 8000:8000
    networks:
      - mst_network

  django_worker:
    <<: *django
    containter_name: django_worker
    command: ["/app/.venv/bin/python", "/app/manage.py", "qcluster"]

  mariadb:
    image: mariadb:10
    container_name: mariadb
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=meinestadttransparent
      - MYSQL_USER=meinestadttransparent
      - MYSQL_PASSWORD=changeme
      - MYSQL_RANDOM_ROOT_PASSWORD=true
    networks:
      - mst_network
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
    ulimits: # Elasticsearch needs those
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - mst_network

  minio:
      image: minio/minio
      container_name: minio
      volumes:
        - minio_data:/minio_data
      environment:
        MINIO_ACCESS_KEY: meinestadttransparent
        MINIO_SECRET_KEY: changeme
      ports:
        - 9000:9000
      networks:
        - mst_network
      command: server /minio_data

volumes:
  mariadb_data:
  elasticsearch_data:
  minio_data:

networks:
  mst_network:
